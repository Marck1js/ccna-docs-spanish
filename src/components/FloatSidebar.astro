---
import Svg from "../lib/Svg.astro";
import { sidebarConfigTopic } from "../config/sidebarConfig";
const { pathname, current } = Astro.props;

interface Topic {
  name: string;
  path?: string;
  route: {
    concept: {
      label?: string;
      path?: string;
    };
  }[];
}
---

<nav
  class="sticky float-sidebar-width h-[40px] bg-main dark:bg-dark-main border-b-[1px] border-border dark:border-dark-border"
>
  <details class="" open>
    <summary class="list-none flex gap-2 items-center h-[40px] px-[20px]">
      <div
        class="h-[30px] flex items-center gap-2 border-[1px] border-border pl-[10px] rounded-md"
      >
        <span class="darkmode"> Aqui </span>
        <div class="icon">
          <Svg name="chevronDown" iconStyle="darkmode" />
        </div>
      </div>
      <span
        title={current}
        class="darkmode whitespace-nowrap text-ellipsis text-nowrap overflow-hidden"
      >
        <!-- {
          sidebarConfigTopic
            .map((topic) =>
              topic.route.find((route) => route.concept.path === pathname)
            )
            .find((route) => route)?.concept.label || "custom"
        } -->
        {current}
      </span>
    </summary>
    <div class="w-full  flex flex-col">
      <div class="  h-half overflow-auto border-b-4 border-border ">
        {
          sidebarConfigTopic?.map((section) => (
            <ul class="bg-main dark:bg-dark-main">
              <li class="">
                <a
                  href={section.path ? section.path : "#"}
                  class="px-[10px] flex items-center text-primary dark:text-dark-primary h-[40px] border-b border-border"
                >
                  {section.name}
                </a>
                <ul class="px-[25px]">
                  {section.route?.map(({ concept }) => (
                    <li class="flex justify-between items-center h-[45px] border-b border-main-purple-hover last:border-none">
                      <a href={concept.path} class="">
                        <span
                          class={`${pathname == concept.path ? "font-bold" : null} text-primary dark:text-dark-primary`}
                        >
                          {concept.label} 
                        </span>
                      </a>
                      {pathname == concept.path ? (
                        <Svg name="tick" iconStyle="text-main-purple " />
                      ) : (
                        <span />
                      )}
                    </li>
                  ))}
                </ul>
              </li>
            </ul>
          ))
        }
      </div>
    </div>
  </details>
</nav>

<style>
  details > summary .icon {
    transform: rotate(-90deg);
    transition: transform 100ms linear;
  }

  details[open] > summary .icon {
    transform: rotate(0deg);
    transition: transform 100ms linear;
  }
</style>
